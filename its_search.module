<?php

/**
 * Implements hook_init().
 *
 * Pass the Google Custom Search Engine ID to Javascript
 */

function its_search_init() {
  drupal_add_js(array('its_search' => array(
    'cx' => variable_get('google_cse_cx', ''),
  )), 'setting');
}

/**
 *  Implements hook_menu().
 */

function its_search_menu() {
  $items = array();

  $items['search'] = array(
    'title'           => 'Search',
	'page callback'   => 'its_search_search_page',
	'access callback' => TRUE,
  );

  $items['admin/config/search/its_search'] = array(
    'title' => 'Google Custom Search',
    'type'  => MENU_NORMAL_ITEM,
    'description' => 'Customize Google Custom Search',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('its_search_admin_settings'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Callback for the /search page
 *
 * We use gcse:search instead of gcse:searchresults-only to show a search box alongside
 * the search results. The search box will contain the search query.
 * We use a different queryparametername. The default, 'q' conflicts with Drupal's.
 *
 */

function its_search_search_page() {
  $output = '<gcse:search linktarget="_parent" queryparametername="' . variable_get('google_cse_q', 's') . '"></gcse:search>';
  return $output;
}

/**
 * Implements hook_block_info().
 *
 * Search Box Block
 * We show this everywhere, except the /search page where the search box is closer to
 * the search results
 *
 */

function its_search_block_info() {
  $blocks['its_search_search'] = array(
    'info' => t('Search box'),
	'status' => TRUE,
	'region' => 'search_box',
	'visibility' => BLOCK_VISIBILITY_NOTLISTED,
	'pages' => 'search',
  );

  return $blocks;
}


/**
 * Implements hook_block_view().
 * 
 * Display Google's code to display the search box.
 * We use a different queryparametername. The default, 'q' conflicts with Drupal's.
 *
 */

function its_search_block_view($delta = '') {
  switch ($delta) {
    case 'its_search_search':
      global $base_url;
	  $block['content'] = array(
	    '#markup' => '<gcse:searchbox-only linktarget="' . $base_url . '" queryparametername="' . variable_get('google_cse_q', 's') . '"></gcse:searchbox-only>',
      );
	  break;
  }
  return $block;
}

/**
 * Admin Settings Form
 */

function its_search_admin_settings() {
  $form = array();

  $form['google_cse_cx'] = array(
    '#title' => t('Google Custom Search Engine ID'),
    '#type' => 'textfield',
    '#default_value' => variable_get('google_cse_cx', ''),
    '#description' => t('Enter your <a target="_blank" href="http://www.google.com/cse/manage/all">Google CSE unique ID</a>.'),
  );
  $form['google_cse_q'] = array(
    '#title' => t('Google Custom Search Parameter'),
    '#type' => 'textfield',
	'#required' => TRUE,
	'#element_validate' => array('its_search_parameter_validate'),
    '#default_value' => variable_get('google_cse_q', 's'),
    '#description' => t('Enter a custom query parameter. The default query parameter <em>q</em> conflicts with Drupal&rsquo;s own and causes "404 Resource Not Found" errors. '),
  );
  return system_settings_form($form);
}

/**
 * Validate the Google Custom Search parameter. It can't be 'q'.
 */

function its_search_parameter_validate($element, $form_state) {
  if (trim($element['#value']) == 'q') {
    form_error($element, t('Please choose a different paramater. <em>q</em> conflicts with Drupal&rsquo;s own.'));
  }
}
