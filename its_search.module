<?php

/**
 *  Implements hook_menu().
 */

function its_search_menu() {
  $items = array();

  $items['search'] = array(
    'title'           => 'Search',
	'page callback'   => 'its_search_search_page',
	'access callback' => TRUE,
  );

  return $items;
}

/**
 *  Callback for the /search page
 *
 *  We use gcse:search instead of gcse:searchresults-only to show a search box alongside
 *  the search results. The search box will contain the search query.
 *  Note the addition of queryparametername as q_as. The default, 'q' conflicts with Drupal's.
 *
 */

function its_search_search_page() {
  $output = '<gcse:search linktarget="_parent" queryparametername="q_as"></gcse:search>';
  return $output;
}

/**
 * Implements hook_block_info().
 *
 * Search Box Block
 * We show this everywhere, except the /search page where the search box is closer to
 * the search results
 *
 */

function its_search_block_info() {
  $blocks['its_search_search'] = array(
    'info' => t('Search box'),
	'status' => TRUE,
	'region' => 'search_box',
	'visibility' => BLOCK_VISIBILITY_NOTLISTED,
	'pages' => 'search',
  );

  return $blocks;
}


/**
 * Implements hook_block_view().
 * 
 * Display Google's code to display the search box.
 * Note the addition of queryparametername as q_as. The default, 'q' conflicts with Drupal's.
 *
 */

function its_search_block_view($delta = '') {
  switch ($delta) {
    case 'its_search_search':
      global $base_url;
	  $block['content'] = array(
	    '#markup' => '<gcse:searchbox-only linktarget="' . $base_url . '" queryparametername="q_as"></gcse:searchbox-only>',
      );
	  break;
  }
  return $block;
}
